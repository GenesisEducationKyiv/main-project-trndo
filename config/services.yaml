# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    env: '%env(resolve:APP_ENV)%'
    default_email: 'no-replay@cryptorates.com'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Controller\:
        resource: '../src/Controller'
        tags: [ 'controller.service_arguments' ]

    App\Utils\FileSystem\Writer\FileSystemWriterInterface:
        class: App\Utils\FileSystem\Writer\FileWriter
        arguments:
            - "%kernel.project_dir%/system"

    App\Utils\FileSystem\Reader\FileSystemReaderInterface:
        class: App\Utils\FileSystem\Reader\FileReader
        arguments:
            - "%kernel.project_dir%/system"

    # Decorator for HttpClientInterface
    app.currency_rate_coin_gate_http_client_decorator:
        class: App\Utils\Http\Decorator\LoggerResponseWithMessageDecorator
        arguments:
            - '@http_client'
            - '@monolog.logger.currency_provider_response'
            - 'CoinGate - Response: '

    # Decorator for HttpClientInterface
    app.currency_rate_coin_gecko_http_client_decorator:
        class: App\Utils\Http\Decorator\LoggerResponseWithMessageDecorator
        arguments:
            - '@http_client'
            - '@monolog.logger.currency_provider_response'
            - 'CoinGecko - Response: '

    # Decorator for HttpClientInterface
    app.currency_crypto_compare_gate_http_client_decorator:
        class: App\Utils\Http\Decorator\LoggerResponseWithMessageDecorator
        arguments:
            - '@http_client'
            - '@monolog.logger.currency_provider_response'
            - 'CryptoCompare - Response: '

    App\Utils\CurrencyRateComparator\Chain\CoinGateCurrencyRateComparatorHandler:
        tags: [ 'app.currency_rate_handler' ]

    App\Utils\CurrencyRateComparator\Chain\CoinGeckoCurrencyRateComparatorHandler:
        tags: [ 'app.currency_rate_handler' ]

    App\Utils\CurrencyRateComparator\Chain\CryptoCompareCurrencyRateComparatorHandler:
        tags: [ 'app.currency_rate_handler' ]

    App\Utils\CurrencyRateComparator\Comparator\CoinGateCurrencyRateComparator:
        arguments:
            - '@app.currency_rate_coin_gate_http_client_decorator'

    App\Utils\CurrencyRateComparator\Comparator\CoinGeckoCurrencyRateComparator:
        arguments:
            - '@app.currency_rate_coin_gecko_http_client_decorator'

    App\Utils\CurrencyRateComparator\Comparator\CryptoCompareCurrencyRateComparator:
        arguments:
            - '@app.currency_crypto_compare_gate_http_client_decorator'
